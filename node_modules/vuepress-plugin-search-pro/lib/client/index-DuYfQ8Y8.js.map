{"version":3,"file":"index-DuYfQ8Y8.js","sources":["../../src/client/define.ts","../../src/client/utils/searchWorker.ts","../../src/client/helpers/search.ts"],"sourcesContent":["import type {\n  SearchProCustomFieldFormatter,\n  SearchProHotKeyOptions,\n  SearchProLocaleConfig,\n} from \"../shared/index.js\";\n\ntype SearchProClientCustomFiledConfig = Record<\n  string,\n  SearchProCustomFieldFormatter\n>;\n\ndeclare const SEARCH_PRO_ENABLE_AUTO_SUGGESTIONS: boolean;\ndeclare const SEARCH_PRO_CUSTOM_FIELDS: SearchProClientCustomFiledConfig;\ndeclare const SEARCH_PRO_OPTIONS: {\n  searchDelay: number;\n  suggestDelay: number;\n  queryHistoryCount: number;\n  resultHistoryCount: number;\n  hotKeys: SearchProHotKeyOptions[];\n  worker: string;\n};\ndeclare const SEARCH_PRO_LOCALES: SearchProLocaleConfig;\n\nexport const searchProOptions = SEARCH_PRO_OPTIONS;\n\nexport const enableAutoSuggestions = SEARCH_PRO_ENABLE_AUTO_SUGGESTIONS;\nexport const searchProClientCustomFiledConfig = SEARCH_PRO_CUSTOM_FIELDS;\nexport const searchProHotKeys = searchProOptions.hotKeys;\nexport const searchProLocales = SEARCH_PRO_LOCALES;\nexport const clientWorker = new URL(\"./worker/index.js\", import.meta.url);\n","import { values } from \"@vuepress/helper/client\";\nimport type { SearchOptions } from \"slimsearch\";\n\nimport type { IndexItem } from \"../../shared/index.js\";\nimport { clientWorker, searchProOptions } from \"../define.js\";\nimport type { QueryResult, SearchResult } from \"../typings/index.js\";\n\ndeclare const __VUEPRESS_BASE__: string;\ndeclare const __VUEPRESS_DEV__: boolean;\n\ninterface PromiseItem {\n  id: number;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  resolve: (args: any) => void;\n  reject: (err: Error) => void;\n}\n\nexport interface SearchWorker {\n  /**\n   * Get both suggestions and results\n   *\n   * 同时获取建议和结果\n   *\n   * @param query - search query 搜素词\n   * @param localePath - locale path 语言路径\n   * @param options - search options 搜素选项\n   */\n  all: (\n    query: string,\n    localePath?: string,\n    options?: SearchOptions<string, IndexItem>,\n  ) => Promise<QueryResult>;\n\n  /**\n   * Get suggestions\n   *\n   * 获取建议\n   *\n   * @param query - search query 搜素词\n   * @param localePath - locale path 语言路径\n   * @param options - search options 搜素选项\n   */\n  suggest: (\n    query: string,\n    localePath?: string,\n    options?: SearchOptions<string, IndexItem>,\n  ) => Promise<string[]>;\n\n  /**\n   * Get search results\n   *\n   * 获取搜索结果\n   *\n   * @param query - search query 搜素词\n   * @param localePath - locale path 语言路径\n   * @param options - search options 搜素选项\n   */\n  search: (\n    query: string,\n    localePath?: string,\n    options?: SearchOptions<string, IndexItem>,\n  ) => Promise<SearchResult[]>;\n\n  /**\n   * Terminate current worker\n   *\n   * 终止当前 worker\n   */\n  terminate: () => void;\n}\n\nexport const createSearchWorker = (): SearchWorker => {\n  // Service worker with module only works on webkit browsers now, so we only used it in dev\n  const worker = new Worker(\n    __VUEPRESS_DEV__\n      ? clientWorker\n      : `${__VUEPRESS_BASE__}${searchProOptions.worker}`,\n    __VUEPRESS_DEV__ ? { type: \"module\" } : {},\n  );\n  const queues = {\n    suggest: [] as PromiseItem[],\n    search: [] as PromiseItem[],\n    all: [] as PromiseItem[],\n  };\n\n  worker.addEventListener(\n    \"message\",\n    ({\n      data,\n    }: MessageEvent<\n      | [\"suggest\", number, string[]]\n      | [\"search\", number, SearchResult[]]\n      | [\"all\", number, QueryResult]\n    >) => {\n      const [type, timestamp, result] = data;\n      const queue = queues[type];\n      const index = queue.findIndex(({ id }) => id === timestamp);\n\n      if (index > -1) {\n        const { resolve } = queue[index];\n\n        queue.forEach((item, i) => {\n          if (i > index) item.reject(new Error(\"Search has been canceled.\"));\n        });\n        queues[type] = queue.slice(index + 1);\n        resolve(result);\n      }\n    },\n  );\n\n  return {\n    suggest: (\n      query: string,\n      locale?: string,\n      options?: SearchOptions<string, IndexItem>,\n    ): Promise<string[]> =>\n      new Promise((resolve, reject) => {\n        const id = Date.now();\n\n        worker.postMessage({ type: \"suggest\", id, query, locale, options });\n        queues.suggest.push({ id, resolve, reject });\n      }),\n\n    search: (\n      query: string,\n      locale?: string,\n      options?: SearchOptions<string, IndexItem>,\n    ): Promise<SearchResult[]> =>\n      new Promise<SearchResult[]>((resolve, reject) => {\n        const id = Date.now();\n\n        worker.postMessage({ type: \"search\", id, query, locale, options });\n        queues.search.push({ id, resolve, reject });\n      }),\n\n    all: (\n      query: string,\n      locale?: string,\n      options?: SearchOptions<string, IndexItem>,\n    ): Promise<QueryResult> =>\n      new Promise<QueryResult>((resolve, reject) => {\n        const id = Date.now();\n\n        worker.postMessage({ type: \"all\", id, query, locale, options });\n        queues.all.push({ id, resolve, reject });\n      }),\n\n    terminate: (): void => {\n      worker.terminate();\n\n      values(queues).forEach((item) => {\n        item.forEach(({ reject }) =>\n          reject(new Error(\"Worker has been terminated.\")),\n        );\n      });\n    },\n  };\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { App, ComputedRef, InjectionKey } from \"vue\";\nimport { computed, inject } from \"vue\";\nimport type { PageData } from \"vuepress/client\";\nimport { useRouteLocale } from \"vuepress/client\";\n\nimport type { SearchResult, WorkerSearchOptions } from \"../typings/index.js\";\n\ndeclare const __VUEPRESS_DEV__: boolean;\n\nexport interface SearchLocaleOptions extends WorkerSearchOptions {\n  suggestionsFilter?: (\n    suggestions: string[],\n    query: string,\n    locale: string,\n    pageData: PageData,\n  ) => string[];\n  searchFilter?: (\n    results: SearchResult[],\n    query: string,\n    locale: string,\n    pageData: PageData,\n  ) => SearchResult[];\n}\n\nexport interface SearchOptions extends SearchLocaleOptions {\n  locales?: Record<string, SearchLocaleOptions>;\n}\n\nlet slimsearchOptions: SearchOptions = {};\n\nconst slimsearchSymbol: InjectionKey<SearchOptions> = Symbol(\n  __VUEPRESS_DEV__ ? \"slimsearch\" : \"\",\n);\n\nexport const defineSearchConfig = (options: SearchOptions): void => {\n  slimsearchOptions = options as unknown as SearchOptions;\n};\n\nexport const useSearchOptions = (): ComputedRef<SearchLocaleOptions> => {\n  const routeLocale = useRouteLocale();\n  const { locales = {}, ...options } = inject(slimsearchSymbol)!;\n\n  return computed(\n    () =>\n      <SearchLocaleOptions>{\n        ...options,\n        ...(locales[routeLocale.value] || {}),\n      },\n  );\n};\n\nexport const injectSearchConfig = (app: App): void => {\n  app.provide(slimsearchSymbol, slimsearchOptions);\n};\n"],"names":["searchProOptions","enableAutoSuggestions","searchProClientCustomFiledConfig","searchProHotKeys","searchProLocales","clientWorker","createSearchWorker","worker","queues","data","type","timestamp","result","queue","index","id","resolve","item","i","query","locale","options","reject","values","slimsearchOptions","slimsearchSymbol","defineSearchConfig","useSearchOptions","routeLocale","useRouteLocale","locales","inject","computed","injectSearchConfig","app"],"mappings":"6IAuBO,MAAMA,EAAmB,mBAEnBC,EAAwB,mCACxBC,EAAmC,yBACnCC,EAAmBH,EAAiB,QACpCI,EAAmB,mBACnBC,EAAe,IAAI,IAAI,oBAAqB,YAAY,GAAG,EC0C3DC,EAAqB,IAAoB,CAEpD,MAAMC,EAAS,IAAI,OACjB,iBACIF,EACA,GAAG,iBAAiB,GAAGL,EAAiB,MAAM,GAClD,iBAAmB,CAAE,KAAM,QAAS,EAAI,CAC1C,CAAA,EACMQ,EAAS,CACb,QAAS,CAAA,EACT,OAAQ,CAAA,EACR,IAAK,CACP,CAAA,EAEA,OAAAD,EAAO,iBACL,UACA,CAAC,CACC,KAAAE,CACF,IAIM,CACJ,KAAM,CAACC,EAAMC,EAAWC,CAAM,EAAIH,EAC5BI,EAAQL,EAAOE,CAAI,EACnBI,EAAQD,EAAM,UAAU,CAAC,CAAE,GAAAE,CAAG,IAAMA,IAAOJ,CAAS,EAE1D,GAAIG,EAAQ,GAAI,CACd,KAAM,CAAE,QAAAE,CAAQ,EAAIH,EAAMC,CAAK,EAE/BD,EAAM,QAAQ,CAACI,EAAMC,IAAM,CACrBA,EAAIJ,GAAOG,EAAK,OAAO,IAAI,MAAM,2BAA2B,CAAC,CACnE,CAAC,EACDT,EAAOE,CAAI,EAAIG,EAAM,MAAMC,EAAQ,CAAC,EACpCE,EAAQJ,CAAM,CAChB,CACF,CACF,EAEO,CACL,QAAS,CACPO,EACAC,EACAC,IAEA,IAAI,QAAQ,CAACL,EAASM,IAAW,CAC/B,MAAMP,EAAK,KAAK,IAAI,EAEpBR,EAAO,YAAY,CAAE,KAAM,UAAW,GAAAQ,EAAI,MAAAI,EAAO,OAAAC,EAAQ,QAAAC,CAAQ,CAAC,EAClEb,EAAO,QAAQ,KAAK,CAAE,GAAAO,EAAI,QAAAC,EAAS,OAAAM,CAAO,CAAC,CAC7C,CAAC,EAEH,OAAQ,CACNH,EACAC,EACAC,IAEA,IAAI,QAAwB,CAACL,EAASM,IAAW,CAC/C,MAAMP,EAAK,KAAK,IAAI,EAEpBR,EAAO,YAAY,CAAE,KAAM,SAAU,GAAAQ,EAAI,MAAAI,EAAO,OAAAC,EAAQ,QAAAC,CAAQ,CAAC,EACjEb,EAAO,OAAO,KAAK,CAAE,GAAAO,EAAI,QAAAC,EAAS,OAAAM,CAAO,CAAC,CAC5C,CAAC,EAEH,IAAK,CACHH,EACAC,EACAC,IAEA,IAAI,QAAqB,CAACL,EAASM,IAAW,CAC5C,MAAMP,EAAK,KAAK,IAAI,EAEpBR,EAAO,YAAY,CAAE,KAAM,MAAO,GAAAQ,EAAI,MAAAI,EAAO,OAAAC,EAAQ,QAAAC,CAAQ,CAAC,EAC9Db,EAAO,IAAI,KAAK,CAAE,GAAAO,EAAI,QAAAC,EAAS,OAAAM,CAAO,CAAC,CACzC,CAAC,EAEH,UAAW,IAAY,CACrBf,EAAO,UAEPgB,EAAAA,EAAOf,CAAM,EAAE,QAASS,GAAS,CAC/BA,EAAK,QAAQ,CAAC,CAAE,OAAAK,CAAO,IACrBA,EAAO,IAAI,MAAM,6BAA6B,CAAC,CACjD,CACF,CAAC,CACH,CACF,CACF,EChIA,IAAIE,EAAmC,CAAA,EAEvC,MAAMC,EAAgD,OACpD,iBAAmB,aAAe,EACpC,EAEaC,EAAsBL,GAAiC,CAClEG,EAAoBH,CACtB,EAEaM,EAAmB,IAAwC,CACtE,MAAMC,EAAcC,EAAe,EAC7B,CAAE,QAAAC,EAAU,CAAA,EAAI,GAAGT,CAAQ,EAAIU,EAAON,CAAgB,EAE5D,OAAOO,EACL,KACuB,CACnB,GAAGX,EACH,GAAIS,EAAQF,EAAY,KAAK,GAAK,CACpC,CAAA,EACJ,CACF,EAEaK,EAAsBC,GAAmB,CACpDA,EAAI,QAAQT,EAAkBD,CAAiB,CACjD"}